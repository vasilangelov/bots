<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveUserBet" xml:space="preserve">
    <value>Потребителят има активен залог на тази валутна двойка.</value>
  </data>
  <data name="CannotPayoutReward" xml:space="preserve">
    <value>Не можем да изплатим потенциалната награда.</value>
  </data>
  <data name="Chart Type" xml:space="preserve">
    <value>Тип на диаграмата</value>
  </data>
  <data name="ClosedTradingWindow" xml:space="preserve">
    <value>Прозорецът за търговия е затворен.</value>
  </data>
  <data name="Compare_Match" xml:space="preserve">
    <value>'{0}' и '{1}' не съвпадат.</value>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Потвърдете паролата</value>
  </data>
  <data name="CreditCard" xml:space="preserve">
    <value>Полето {0} не е валиден номер за кредитна карта.</value>
  </data>
  <data name="Currency Pair" xml:space="preserve">
    <value>Валутна двойка</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Имейл</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Полето {0} е невалиден имейл адрес.</value>
  </data>
  <data name="EntryPercentageRange" xml:space="preserve">
    <value>Входният процент трябва да е число между {0} и {1}.</value>
  </data>
  <data name="FileExtensions" xml:space="preserve">
    <value>Полето {0} приема само файлове със следните разширения: {1}</value>
  </data>
  <data name="InsufficientBalance" xml:space="preserve">
    <value>Нямате достатъчно средства.</value>
  </data>
  <data name="InvalidBettingOption" xml:space="preserve">
    <value>Невалидна опция за залог.</value>
  </data>
  <data name="InvalidCurrencyPair" xml:space="preserve">
    <value>Невалидна валутна двойка.</value>
  </data>
  <data name="InvalidUser" xml:space="preserve">
    <value>Невалиден потребител. Моля обновете страницата или влезте наново.</value>
  </data>
  <data name="MaxLengthAttribute" xml:space="preserve">
    <value>Полето {0} трябва да е текст с максимална дължина '{1}'.</value>
  </data>
  <data name="MinLengthAttribute" xml:space="preserve">
    <value>Полето {0} трябва да е текст с дължина поне '{1}'.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Име</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Националност</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Парола</value>
  </data>
  <data name="Payout" xml:space="preserve">
    <value>Награда</value>
  </data>
  <data name="PayoutRange" xml:space="preserve">
    <value>Наградата трябва да е в интервала между {0} и {1}.</value>
  </data>
  <data name="PhoneAttribute" xml:space="preserve">
    <value>Полето {0} е невалиден телефонен номер.</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Полето {0} трябва да е между {1} и {2}.</value>
  </data>
  <data name="Regex" xml:space="preserve">
    <value>Полето {0} трябва да съвпада с регулярния израз '{1}'.</value>
  </data>
  <data name="Remember me?" xml:space="preserve">
    <value>Запомни ме</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Полето {0} е задължително.</value>
  </data>
  <data name="StringLength" xml:space="preserve">
    <value>Полето {0} трябва да е текст с максимална дължина {1}.</value>
  </data>
  <data name="StringLength_MinMax" xml:space="preserve">
    <value>Полето {0} трябва да е текст с минимална дължина {2} и максимална дължина {1}.</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Полето {0} е невалидно напълно описано http, https, или ftp URL.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Потребителско име</value>
  </data>
  <data name="UsernameRegex" xml:space="preserve">
    <value>Потребителското име може да съдържа '.', '-' or '_' само между думите. Думите трябва да се състоят само от главни и малки латински букви.</value>
  </data>
</root>